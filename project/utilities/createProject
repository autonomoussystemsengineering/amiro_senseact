#!/bin/bash
# This script initalizese a project with a start.txt, .gitignore, CMakeLists.txt and main.cxx


if [ "$#" -ne 1 ]; then
    echo "This is the createProject script"
    echo "Usage: $ ${0} <projectName>"
    exit
fi
echo "Create project env. for ${1}"
mkdir ${1}
chmod 774 ${1}
cd ${1}

cat > .gitignore <<EOF
${1}
EOF

cat > start.txt <<EOF
====== ${1} ======

Fill me with content!
EOF

cat > main.cxx <<EOF
#include <iostream>

using namespace std;

int main() {
  std::cout << "Hello World" << std::endl;
  return 0;
}
EOF


cat > CMakeLists.txt <<EOF
cmake_minimum_required (VERSION 2.6)

# Set the project name to the name of the folder
INCLUDE("\$ENV{MUROX_CMAKE_MODULES}/setProjectName.cmake")

# Read the pkg-config modules
FIND_PACKAGE(PkgConfig)
pkg_check_modules(RSB rsb0.11)
pkg_check_modules(RSC rsc0.11)

# Get modules
SET (BOOST_COMPONENTS regex date_time program_options system thread)
INCLUDE("\$ENV{MUROX_CMAKE_MODULES}/findPackageBoost.cmake")

# Get the compiler specific includes and store them in GXX_INCLUDES
INCLUDE("\$ENV{MUROX_CMAKE_MODULES}/setCompilerIncludes.cmake")

# Set the include pathe
include_directories(
    \${RSB_INCLUDE_DIRS}                                             # RSB
    \${RSC_INCLUDE_DIRS}                                             # RSC
    "\$ENV{MUROX_INCLUDE_DIRS}"                                      # Other includes like converters and stuff
    \${CMAKE_CURRENT_BINARY_DIR}                                     # add the binary tree to the search path for
    \${GXX_INCLUDES}
    \${Boost_INCLUDE_DIR}
)

# Define the source
SET (SOURCE main.cxx)

# add the executable
ADD_EXECUTABLE ("\${PROJECT_NAME}" \${SOURCE})

TARGET_LINK_LIBRARIES (
    "\${PROJECT_NAME}"
    \${RSB_LIBRARIES}
    \${RSC_LIBRARIES}
    \${Boost_LIBRARIES}
)

# Additional compiler flags
ADD_DEFINITIONS (-Wall -Wno-deprecated-declarations -O0 -g -Wno-write-strings)
EOF

chmod 664 *